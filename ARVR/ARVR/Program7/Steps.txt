 Step 1: Set Up Vuforia in Unity
1️⃣ Open Unity and ensure Vuforia Engine is installed.

If not, install it via Window → Package Manager → Vuforia Engine.
2️⃣ Go to Build Settings (File → Build Settings) → Select Android or iOS and click Switch Platform.
🔹 Step 2: Import and Set Up Your Vuforia Database
1️⃣ Download your Image Target database from Vuforia Target Manager.
2️⃣ Import it into Unity (Assets → Import Package → Custom Package).
3️⃣ Enable the database:

Go to Window → Vuforia Configuration
Under Databases, select your database and check Load on Startup.
🔹 Step 3: Add an Image Target
1️⃣ Right-click in the Hierarchy → Vuforia Engine → Image Target.
2️⃣ In the Inspector, set:

Database → Select your imported Vuforia database.
Image Target → Choose your target image from the database.
🔹 Step 4: Add the 3D Truck Model
1️⃣ Import or create a 3D truck model (.fbx, .obj).
2️⃣ Drag the truck model inside the Image Target in the Hierarchy.
3️⃣ Scale & position the truck so it appears correctly when tracking starts.
4️⃣ Disable the truck initially:

Click on the truck model → In Inspector, uncheck "Active" (or SetActive(false) in script).
🔹 Step 5: Add Audio Source
1️⃣ Select the Truck Model.
2️⃣ In the Inspector, click Add Component → Audio Source.
3️⃣ Drag and drop a truck sound effect (.mp3 or .wav) into the Audio Clip field.
4️⃣ Uncheck Play on Awake (so it doesn’t play automatically).

🔹 Step 6: Create the Script (PlayAudioOnDetect.cs)
1️⃣ Right-click in Assets → Create → C# Script.
2️⃣ Rename it to PlayAudioOnDetect.
3️⃣ Open the script and paste this fixed version:

csharp
Copy
Edit
using UnityEngine;
using Vuforia;

public class PlayAudioOnDetect : MonoBehaviour
{
    public GameObject truckModel;  // Assign the 3D truck
    public AudioSource audioSource;  // Assign the audio source

    private ObserverBehaviour observerBehaviour;

    void Start()
    {
        // Get ObserverBehaviour from Image Target
        observerBehaviour = GetComponent<ObserverBehaviour>();

        if (observerBehaviour)
        {
            // Register event for marker detection
            observerBehaviour.OnTargetStatusChanged += OnTargetStatusChanged;
        }

        // Initially hide the truck
        truckModel.SetActive(false);
    }

    private void OnTargetStatusChanged(ObserverBehaviour behaviour, TargetStatus targetStatus)
    {
        if (targetStatus.Status == Status.TRACKED)  
        {
            // Show truck and play audio when marker is detected
            truckModel.SetActive(true);
            if (!audioSource.isPlaying)
                audioSource.Play();
        }
        else if (targetStatus.Status == Status.NO_POSE)  
        {
            // Hide truck and stop audio when marker is lost
            truckModel.SetActive(false);
            audioSource.Stop();
        }
    }
}
🔹 Step 7: Attach and Configure in Unity
1️⃣ Select Image Target in the Hierarchy.
2️⃣ Click Add Component → Attach PlayAudioOnDetect.cs.
3️⃣ Drag and drop:

The Truck Model into the truckModel field in the script.
The Audio Source (from the truck) into the audioSource field.
🔹 Step 8: Test in Unity
1️⃣ Click Play.
2️⃣ Show the marker to your webcam → The truck appears & sound plays.
3️⃣ Remove the marker → The truck disappears & sound stops.
